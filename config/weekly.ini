; Bilinear Coupling Veto ini File
; id:


; For boolean, use "true", "yes", "on", or "0" to indicate True,
; "false", "no", "off", or "1" to indicate False.
; Those are case insensitive.

[general]
; name tag for output files
tag = L1_1102809616_1102896016

; IFO to be analyzed; one of 'H1', 'L1' or 'V1'
ifo = L1

[condor]
; if logdir is left blank, it will be set to /usr1/${USER}
; if logdir is on NSF, you need to tell condor not to complain:
; bash users:
; export _CONDOR_DAGMAN_LOG_ON_NFS_IS_ERROR=FALSE
; tcsh users:
; setenv _CONDOR_DAGMAN_LOG_ON_NFS_IS_ERROR FALSE
logdir = 

; Scratch directory to be used for database engine.
; Specify local scratch directory for better performance and less file server
; load.
; if scratchdir is left blank, it will be set to /usr1/${USER}
scratchdir =

;CHECK: datafind = /opt/lscsoft/glue/bin/ligo_data_find
datafind = /usr/bin/ligo_data_find
;getKW = /home/bernard.hall/local/bilinear/omega_veto/bin/getKW
;getKW = /home/bernard.hall/local/bilinear/omega_veto/bin/getKW
getKW = /home/user.name/local/bilinear/omega_veto/bin/gOmicron
;getKW = /home/bernard.hall/local/bilinear/omega_veto/bin/getOmicron
omegaveto_wrapper = /home/user.name/local/bilinear/omega_veto/bin/bcvOmegaveto
compiled_omegaveto = /home/user.name/local/bilinear/omega_veto/bin/omegaveto
veto_report = /home/user.name/local/bilinear/omega_veto/bin/bcvReport
veto_summaryPage = /home/user.name/local/bilinear/omega_veto/bin/bcvSummaryPage
veto_insert-bin = /home/user.name/local/bilinear/omega_veto/bin/bcvInsert

; un-used yet
;veto_followup-bin = /archive/home/detchar/gitrepo/UPV/KW_veto_followup
;veto_runOmega-bin =
; the installation location of omega scan may vary on the site
; reference: https://geco.phys.columbia.edu/omega/wiki/Documentation/omega/scan
;wscan-bin =

; number that condor retrys to run when jobs fail
retry = 1

; max job number allowed to run at the same time
; (default: maxReportJobNum = 10, maxOmegavetoJobNum = 300)
maxReportJobNum = 150
maxOmegavetoJobNum = 500

; this value will be passed to 
; requirements = Memory >= XXX
; in the .sub file
; (default: reportRequiredMemory = 800, omegavetoRequiredMemory = 800)
reportRequiredMemory = 1000
omegavetoRequiredMemory = 1000

; the code makes a chunk of segments such that 
; duration_lower_limit < (each segment chunk duration) < duration_upper_limit
; this enables to control the computational cost for each job
; the value should be int and unit is **seconds**
; (duration_upper_limit default: 24 hours, duration_lower_limit default = 8 hours)
duration_upper_limit = 1800
duration_lower_limit = 0

; unused option yet
; notification = isogait@carleton.edu

; if True, datafind and omegaveto jobs will be skipped and only
; report, summaryPage (and insert if specified) jobs will run
; (default: False)
only_postprocess = False

[datafind]
; frame type should be filled in the configuration file

; if blank, url-type is set to file
url-type = file


[data_conditioning]
; SNR cutoff for KW triggers (default: 8)
; used only if -1 is supplied for SNRcutoff in the configuration file
; CHECK: SNRcutoff = 8
SNRcutoff = 8

; (default: 32)
highPassCutoff = 32

; every channel is re-sampled to this frequency (default: 4096)
sampleFrequency = 4096

; required accidental veto rate (threshold of false alarm)
; (default: 1.66e-06, i.e. once per week)
;CHECK: reqAccVetoRate = 1.66e-06
;reqAccVetoRate = 1.66e-03
;Once per day: 1.16e-05
reqAccVetoRate = 1.16e-05
; threshold on veto significance
; (default: 10)
vetoSignificanceThresh = 3

; if True, use rMax instead of r as threshold
; (default: False)
rMax = False

; veto window size in second
; (default: positive_window = 0.5, negative_window = 0.5)
positive_window = 0.5
negative_window = 0.5

; safety probability < 10^(safety_thresh) will be regarded as unsafe
; (default: -3)
safety_thresh = -3

; number of time slides
; (default: timeShiftMin = -50, timeShiftMax = 50, numTimeShifts = 11)
timeShiftMin = -50
timeShiftMax = 50
;numTimeShifts = 14
numTimeShifts = 60

[output]
; output directory from omegaveto
; default is 'results'
outDir = results

; name of the log file from omegaveto
logFile =

generateReport = True

debugLevel = 0

; .txt, .txt.gz, .pickle, pickle.gz, .mat extensions are supported
;extension = .txt

[input]
; Path to a file that lists channels to be analyzed
configuration_file = configuration_file.txt

; Files listed in analyzed_seg_files will be used as analyzed segments
; use comma to specify more than one.
; Alternatively, you can use wildcard.
; For example, *_segs.txt would be all the files with _segs.txt in their suffix.
; If more than one files are given, union will be taken.
; xml, xml.gz, txt are supported.
analyzed_seg_files = segment_file.txt
;H1_DARMERR_957312015_957916815_WEEKLY_segs.txt

; veto_definer_file is required if you set any one of cats True.
; veto definer file for CBC group is available at:
; https://www.lsc-group.phys.uwm.edu/ligovirgo/cbc/public/segments/S6/
; you can put a file path or http / ftp
; CHECK: setting all cat's False: veto_definer_file = 

; server for ligolw_segment_query (--segment-url)
; If blank, https://segdb.ligo.caltech.edu is used by default.
; For S5, use ldbd://metaserver.phy.syr.edu:30015
; (Please note that flag name convention is also different for S5.
; For example, sciencemode flag is Science instead of DMT-SCIENCE.
; This has to be reflected in the veto definer file above.)
server =

; If set True, all the flags in that category defined in the veto definer files
; are applied as veto.
cat1 = False 
cat2 = False
cat3 = False
cat4 = False
cat5 = False

; Segs in files flag_seg_files will be excluded from analyzed segments.
; Use comma to specify more than one.
; Alternatively, you can use wildcard.
; For example, *_segs.txt would be all the files with _segs.txt in their suffix.
; If more than one files are given, union will be taken.
; xml, xml.gz, txt are supported.
flag_seg_files =

; location of KW trigers.
; leave it blank to use default locations specified in getKW.py
;KW_location = /gds-h1/dmt/triggers/H-KW_TRIGGERS/H-KW_TRIGGERS-10780/
KW_location = /home/detchar/triggers/ER6/L1/

;/home/detchar/triggers/ER6/L1
;
;H-KW_TRIGGERS-1074596608-64.trg

; File containing GW triggers.
; Set this to 'KW' and the setup code will create the file automatically 
; using KW DARM_ERR triggers.
; The file format is expected to be the same as KW; 8 columns with
; start GPS time: 1st column
; end GPS time: 2nd column
; central GPS time: 3rd column
; central frequency: 4th column
; SNR: sqrt(6th column - 7th column)
; NEW: set to OMICRON for gOmicron trigger file creation (use with bcvSetup_unv)

;GW_trigger_file = /home/bernard.hall/DETCHAR/omega_test/test2_omicron_1pair/H1_1074816016_1075334416_ER5_TEST_H1_PSL-FSS_FAST_MON_OUT_DQ_omicron.txt
GW_trigger_file = OMICRON

; There could be a few options for GW KW triggers
; For example, there are H1_LSC-DARM_ERR_1024_4096 and
; H1_LSC-DARM_ERR_32_2048 available for S6B (different frequency band.)
; You can specify which KW triggers to use here.
; If blank, the code will take a union.
; CHECK: Added:

;GW_KW = H1_PSL-FSS_FAST_MON_OUT_DQ_1024_4096 
;GW_KW = OAF-CAL_DARM_DQ

; in the omicron case, this is used to create the expected name of the GW trigger file
GW_OMICRON = L1:OAF-CAL_DARM_DQ

; Specify path to the file which lists all the injection times.
; Program assumes that the first column is the time.
; Injections will be filtered by segment list.
; If blank, the code tries to get both inspiral and burst injections from 
; /archive/home/detchar/public_html/S6/HWinjections/
; Set this to "off" if you do not want to check safety against HI
injection_file = off

[webpage]
; if left blank, output will be in ${HOME}/public_html/veto/(tag)_webpage

outdir = /home/user.name/public_html/ER6/BCV/FullER6

[veto]
; if true, write in a directory called inserted_segs under webpage output
xml = False

; if true, insert veto segments into database
;insert = True 
insert = False

; default is segdb.ligo.caltech.edu:30020
; for er5, use segdb-er
server = https://dqsegdb5.phy.syr.edu

; web address where the summary of the run appears; this will be used in
; comment section when veto segments are inserted
web_address = https://ldas-jobs.ligo-la.caltech.edu/~user.name/ER6/BCV/FullER6/L1_1104796816_1105401616_webpage/index.html

; unsafe channels listed below will not be inserted
unsafe_channels = 

; trigger type used; KW, MBTA, IHOPE,
; or OMICRON
;trigger_type = KW
trigger_type = OMICRON

[follow_up]
; follow up for detchar
; follow_up = True

; cluster window
; twindow = 1

; dq_flag = True

; if left blank, it will be set to https://segdb.ligo.caltech.edu
; server =

; wscans = True

; full qscan is discouraged because of the number of qscans
; you can provide your own config file
; set this to 'selected' for abbreviated qscan (recommended)
; wscan_config =

; wscan_framecache = /frames/full

; wscan_num = 5
